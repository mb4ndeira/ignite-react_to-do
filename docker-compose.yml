version: "3"
services:
  app:
    container_name: "next.do"
    build:
      context: .
      dockerfile: ./app/Dockerfile
      args:
        - PACKAGE_JSON_PATH=./app/package.json
    ports:
      - "3000:3000"
    volumes:
      - ./server/src/types:/server/src/types
      - ./app/src:/app/src
      - ./app/public:/app/public
      - ./app/tsconfig.json:/app/tsconfig.json
      - ./app/next.config.js:/app/next.config.js
      - ./app/tailwind.config.js:/app/tailwind.config.js
      - ./app/postcss.config.js:/app/postcss.config.js

  server:
    container_name: "next.do_server"
    build:
      context: .
      dockerfile: ./server/Dockerfile
      args:
        - PACKAGE_JSON_PATH=./server/package.json
        - PRISMA_FOLDER_PATH=./server/prisma/
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/next_do?schema=public
    ports:
      - "3030:3030"
    volumes:
      - ./server/src:/server/src
      - ./server/test:/server/test
      - ./server/tsconfig.json:/server/tsconfig.json
      - ./server/tsconfig.build.json:/server/tsconfig.build.json
      - ./server/nest-cli.json:/server/nest-cli.json
      - ./server/prisma:/server/prisma
      - ./server/.eslintrc.js:/server/.eslintrc.js
      - ./server/.prettierrc:/server/.prettierrc
    depends_on:
      - db

  db:
    container_name: next.do_db
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: next_do
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "5432:5432"
